{"version":3,"sources":["services/toyService.js","store/actions/toyActions.js","cmps/ToyPreview.jsx","cmps/ToyList.jsx","cmps/ToyFilter.jsx","pages/ToyApp.jsx","pages/ToyEdit.jsx","pages/ToyDetails.jsx","pages/ToyStats.jsx","cmps/AppHeader.jsx","App.js","store/reducers/toyReducer.js","store/store.js","serviceWorker.js","index.js"],"names":["axios","Axios","create","withCredentials","query","filterBy","get","sort","name","type","inStock","then","res","_sortResult","data","save","toy","prm","_id","put","post","remove","id","delete","toys","sortBy","toy1","toy2","price","toLowerCase","loadToys","loadingStatus","dispatch","toyService","dispatchRes","Promise","resolve","saveToy","savedToy","ToyPreview","props","inStockDisplay","imgURL","imgSRC","className","src","alt","onClick","onDeleteToy","to","ToyList","map","key","ToyFilter","state","filter","handleChange","ev","target","value","parseInt","setState","prevState","onSetFilter","placeholder","this","onChange","defaultValue","React","Component","ToyApp","saveFilter","toyId","removeToy","toggleLoad","prevProps","isLoading","mapDispatchToProps","connect","toyApp","currFilter","UPLOAD_URL","ToyEdit","handleSubmit","formInputs","history","push","validate","values","errors","length","OnUploadImg","formData","FormData","append","files","url","loadToy","match","params","initialValues","onSubmit","enableReinitialize","touched","handleBlur","isSubmitting","onBlur","disabled","currToy","ToyDetails","ToyStats","labels","datasets","backgroundColor","hoverBackgroundColor","setData","result","reduce","acc","Object","keys","AppHeader","App","component","path","exact","initialState","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","location","hostname","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bd1a2405.chunk.js","sourcesContent":["import Axios from 'axios'\n\n// const baseUrl = 'http://localhost:3000/toy'; //json-server\n\n//const baseUrl = 'http://localhost:3030/api/toy'; //node-expressas\n\nconst BASE_URL = (process.env.NODE_ENV != 'development')\n    ? 'api/toy'\n    : '//localhost:3030/api/toy'\n\nconst axios = Axios.create({\n    withCredentials: true\n});\n\nexport default {\n    query,\n    save,\n    remove,\n    get\n}\n\nfunction query(filterBy) {\n    if (!filterBy)\n        return axios.get(`${BASE_URL}`)\n            .then(res => {\n                _sortResult(res.data, 'name')\n                return res.data\n            })\n    else {\n        return axios.get(`${BASE_URL}?sort=${filterBy.sort}&name=${filterBy.name}&type=${filterBy.type}&inStock=${filterBy.inStock}`)\n            //for json-server:\n            // return axios.get(`${BASE_URL}?_sort=${filterBy.sort}&name_like=${filterBy.name}&type_like=${filterBy.type}&inStock_like=${filterBy.inStock}`)\n            .then(res => {\n                _sortResult(res.data, filterBy.sort)\n                return res.data\n            })\n    }\n}\n\nfunction get(id) {\n    return axios.get(`${BASE_URL}/${id}`)\n        .then(res => res.data)\n}\n\nfunction remove(id) {\n    return axios.delete(`${BASE_URL}/${id}`)\n}\n\nfunction save(toy) {\n    var prm;\n    if (toy._id) {\n        prm = axios.put(`${BASE_URL}/${toy._id}`, toy)\n    } else {\n        prm = axios.post(`${BASE_URL}`, toy)\n    }\n    return prm.then(res => {\n        return res.data\n    })\n}\n\n\n\nfunction _sortResult(toys, sortBy) {\n    toys.sort(function (toy1, toy2) {\n        switch (sortBy) {\n            case 'price':\n                if (+toy1.price < +toy2.price) return -1\n                if (+toy1.price > +toy2.price) return 1\n                return 0\n            case 'name':\n                if (toy1.name.toLowerCase() > toy2.name.toLowerCase()) return 1\n                if (toy1.name.toLowerCase() < toy2.name.toLowerCase()) return -1\n                return 0\n            default :\n                return 0\n        }\n    })\n\n}","import toyService from '../../services/toyService.js';\n\nexport function loadToys(filterBy,loadingStatus) {\n    return dispatch => {\n        dispatch({ type: 'TOGGLE_LOAD', loadingStatus });\n        return toyService.query(filterBy)\n            .then(toys => dispatch({ type: 'SET_TOYS', toys }))\n            .then((dispatchRes) => Promise.resolve(dispatchRes.toys))\n    }\n}\n\nexport function loadToy(id) { //for the details page, stil not implemented..\n    return dispatch => {\n        toyService.get(id)\n            .then(toy => {\n                dispatch({ type: 'SET_TOY', toy });\n            })\n    }\n}\n\nexport function saveToy(toy) { \n    return dispatch => {\n        const type = toy._id ? 'UPDATE_TOY' : 'ADD_TOY';\n        return toyService.save(toy)\n            .then(savedToy => dispatch({ type, toy: savedToy }))\n            .then((dispatchRes) => Promise.resolve(dispatchRes.toy))\n    }\n}\n\nexport function removeToy(toyId) {\n    return dispatch => {\n        return toyService.remove(toyId)\n            .then(() => dispatch({ type: 'REMOVE_TOY', toyId }))\n            .then(() => Promise.resolve())\n    }\n}\n\nexport function saveFilter(filter) {\n    return dispatch => {\n        return toyService.query(filter)\n            .then(() => dispatch({ type: 'UPDATE_TOY_FILTER', filter }))\n            .then(() => Promise.resolve())\n    }\n}\n\n\nexport function toggleLoad(loadingStatus) {\n    return (dispatch) => {\n        dispatch({ type: 'TOGGLE_LOAD', loadingStatus });\n    };\n}\n","\nimport React from 'react'\nimport { Link } from \"react-router-dom\";\n\n\n\nexport default function ToyPreview(props) {\n    const { name, price, type, inStock, imgURL } = props.toy\n    let inStockDisplay\n    if (!inStock || inStock === 'false') inStockDisplay = 'N/A'\n    else inStockDisplay = 'Sale'\n    let imgSRC = imgURL ? imgURL : \"https://image.shutterstock.com/image-vector/no-image-available-vector-illustration-260nw-744886198.jpg\"\n    return (\n        <article className=\"toy-item\">\n            <div className=\"toy-content\">\n                <h3 className=\"toy-name\">{name}</h3>\n                <h3>Price: {price}$</h3>\n                <h3>{type}</h3>\n                <h3>{inStockDisplay}</h3>\n                <img className=\"toy-thumb\" src={imgSRC} alt=\"\"></img>\n            </div>\n            <div className=\"toy-actions flex column\">\n                <button className=\"delete-button\" onClick={() => props.onDeleteToy(props.toy._id)}>Delete</button>\n                <Link to={`/toy/edit/${props.toy._id}`}>Edit Toy</Link>\n                <Link to={`/toy/${props.toy._id}`}> Details</Link>\n            </div>\n        </article>\n    )\n}","import React from 'react'\nimport ToyPreview from './ToyPreview.jsx'\n\n\nexport default function ToyList(props) {\n    return (\n        <div className=\"toy-list flex wrap justify-center\">\n            {props.toys.map(toy => {\n                return <ToyPreview onDeleteToy={props.onDeleteToy} key={toy._id} toy={toy}/>\n                }      \n            )}\n        </div>\n    )\n}","import React from 'react';\n\n\nexport default class ToyFilter extends React.Component {\n\n    state = {\n        filter: {\n            name: '',\n            type: '',\n            inStock: '',\n            sort: ''\n        }\n    }\n\n    handleChange = (ev) => {\n        let { name, value } = ev.target;\n        value = ev.target.type === 'number' ? parseInt(value) : value;\n        this.setState(prevState => ({ filter: { ...prevState.filter, [name]: value } }), () => {\n            this.props.onSetFilter(this.state.filter)\n        })\n\n    }\n\n    render() {\n        return (\n            <section className=\"toy-filter fs20\">\n                <h2>Filter</h2>\n                <label>\n                    Toy Name\n                        <input type=\"text\" name=\"name\" placeholder=\"Toy Name\" value={this.state.name} onChange={this.handleChange} />\n\n                </label>\n                <label>\n                    Toy Type\n                    <select name=\"type\" value={this.state.type} onChange={this.handleChange}>\n                        <option value=\"\">All</option>\n                        <option value=\"Funny\">Funny</option>\n                        <option value=\"Educational\">Educational</option>\n                        <option value=\"Adult\">Adult</option>\n                    </select>\n                </label>\n                <label>\n                    In Stock\n                    <select name=\"inStock\" value={this.state.inStock} onChange={this.handleChange}>\n                        <option value=\"\">All</option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                    </select>\n                </label>\n                <label>\n                    Sort By\n                    <select name=\"sort\" value={this.state.sort} onChange={this.handleChange}>\n                        <option defaultValue value=\"name\">Name</option>\n                        <option value=\"price\">Price</option>\n                    </select>\n                </label>\n\n            </section>\n        )\n\n    }\n}","import { loadToys, removeToy, saveToy, saveFilter, toggleLoad } from '../store/actions/toyActions.js'\n\nimport ToyList from '../cmps/ToyList'\nimport ToyFilter from '../cmps/ToyFilter'\nimport React from 'react';\n\n\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\n\n\nclass ToyApp extends React.Component {\n\n    componentDidMount() {\n        this.props.loadToys(this.props.filter, true)\n            .then(() => { this.props.toggleLoad(false) })\n    }\n\n    componentDidUpdate(prevProps) { // To properly apply changing the filter\n        if (this.props.filter !== prevProps.filter)\n            this.props.loadToys(this.props.filter, true)\n                .then(() => { this.props.toggleLoad(false) })\n    }\n\n    onSetFilter = (filter) => { \n        this.props.saveFilter(filter)\n    }\n\n    onDeleteToy = (toyId) => {\n        this.props.removeToy(toyId)\n    }\n\n    render() {\n    \n        const { isLoading,toys } = this.props\n        return (\n            <section className=\"toy-app\">\n                <ToyFilter onSetFilter={this.onSetFilter} />\n                <Link className=\"add-toy-link\" to=\"/toy/edit\">Add Toy</Link>\n                <Link to=\"/toy/stats\">Store Statistics</Link>\n                {isLoading && <h2>Loading...</h2>}\n                {!isLoading && toys &&  <ToyList onDeleteToy={this.onDeleteToy} toys={this.props.toys} />}\n            </section>\n        )\n\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        toys: state.toyApp.toys,\n        filter: state.toyApp.currFilter,\n        isLoading: state.toyApp.isLoading\n    }\n}\n\nconst mapDispatchToProps = {\n    loadToys,\n    removeToy,\n    saveToy,\n    saveFilter,\n    toggleLoad\n}\n\n\nexport default ToyApp = connect(mapStateToProps,mapDispatchToProps)(ToyApp)","import React from 'react';\nimport { Formik } from 'formik';\nimport toyService from '../services/toyService.js';\nimport { saveToy } from '../store/actions/toyActions.js';\nimport axios from 'axios'\n\nimport { Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\n\nconst CLOUD_NAME = 'dsqh7qhpg';\nconst UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`;\n\nclass ToyEdit extends React.Component {\n    state = {\n        name: '',\n        price: '',\n        type: 'Funny',\n        inStock: 'true',\n        imgURL:'',\n        _id: ''\n    }\n\n    componentDidMount() {\n        this.loadToy();\n    }\n\n    loadToy() {\n        const { id } = this.props.match.params;\n        if (!id) return; // As it is s a new toy, nothing to load... \n        toyService.get(id)\n            .then(toy => {\n                this.setState({ ...toy });\n            })\n    }\n\n\n    handleSubmit = (formInputs) => {\n        formInputs.imgURL=this.state.toy.imgURL\n        this.props.saveToy(formInputs)\n            .then(() => {\n                this.props.history.push('/');\n            })\n    }\n\n    validate = (values) => {\n        const errors = {};\n        if (values.name.length < 3) errors.name = 'Name must be with at least 3 characters'\n        if (values.price <= 0) errors.price = 'Price must be a positive number'\n        return errors;\n    }\n\n    OnUploadImg = (ev) => {\n        const formData = new FormData();\n        formData.append('file', ev.target.files[0]);\n        formData.append('upload_preset', 'hrzvfhbk');\n\n        // return fetch(UPLOAD_URL, {\n        //     method: 'POST',\n        //     body: formData\n        // })\n        //     .then(res => res.json())\n        //     .then(res => {\n        //         console.log(res)\n        //         return res;\n        //     })\n        //     .catch(err => console.error(err))\n\n        return axios.post(UPLOAD_URL, formData)\n            .then(res => {\n                //console.log(res.data.url)\n                this.setState(prevState => {\n                    return {\n                        toy: {\n                            ...prevState,\n                            imgURL: res.data.url\n                        }\n                    }\n                })\n            })\n    }\n\n    render() {\n        const { name, price, type, inStock, _id } = this.state\n        return (\n            <>\n                <h2>Add/Edit Toy</h2>\n                <Formik initialValues={{ name, price, type, inStock, _id }} validate={this.validate} onSubmit={this.handleSubmit} enableReinitialize>\n\n                    {({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting, }) => (\n                        <form className=\"toy-edit flex column align-center\" onSubmit={handleSubmit}>\n                            <label>Name</label>\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                placeholder=\"Toy Name\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.name}\n                            />\n                            {errors.name && touched.name && <span className=\"validation-error-msg\">{errors.name}</span>}\n                            <label>Price</label>\n                            <input\n                                type=\"number\"\n                                name=\"price\"\n                                placeholder=\"Toy Price\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.price}\n                            />\n                            {errors.price && touched.price && <span className=\"validation-error-msg\">{errors.price}</span>}\n                            <label>Category</label>\n                            <select\n                                name=\"type\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.type}>\n                                <option value=\"Funny\">Funny</option>\n                                <option value=\"Educational\">Educational</option>\n                                <option value=\"Adult\">Adult</option>\n                            </select>\n                            <label>In Stock?</label>\n                            <select\n                                name=\"inStock\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.inStock}>\n                                <option value=\"true\">Yes</option>\n                                <option value=\"false\">No</option>\n                            </select>\n                            <label>Choose file </label>\n                            <input\n                                onChange={(ev) => this.OnUploadImg(ev)}\n                                type=\"file\"\n                            />\n\n                            <input\n                                type=\"hidden\"\n                                name=\"_id\"\n                                value={values._id}\n                            />\n                            <button type=\"submit\" disabled={isSubmitting} className=\"save-button\">Save</button>\n                        </form >\n                    )\n                    }\n\n                </Formik>\n                <Link to=\"/\">Toy list</Link>\n            </>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        toy: state.toyApp.currToy,\n    };\n};\n\nconst mapDispatchToProps = {\n    saveToy\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ToyEdit);","import React from 'react';\nimport { loadToy } from '../store/actions/toyActions.js'\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nclass ToyDetails extends React.Component {\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.loadToy(id);\n  }\n\n  render() {\n    const { toy } = this.props;\n    if (!toy) return 'Loading...';\n    let imgSRC = toy.imgURL ? toy.imgURL : \"https://image.shutterstock.com/image-vector/no-image-available-vector-illustration-260nw-744886198.jpg\"\n    return <div className=\"toy-details\">\n      <h1>Name: {toy.name}</h1>\n      <h2>Price: ${toy.price}</h2>\n      <h2>Category: {toy.type}</h2>\n      <img src={imgSRC} alt=\"\"></img>\n      <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Provident optio unde ipsa aliquid eos distinctio quam rem. Itaque sed, harum distinctio veniam soluta ipsa quisquam, exercitationem animi culpa, nesciunt similique!</p>\n      <Link to=\"/\">Toy list</Link>\n    </div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    toy: state.toyApp.currToy\n  };\n};\n\n\nconst mapDispatchToProps = {\n  loadToy\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToyDetails);\n","import { loadToys } from '../store/actions/toyActions.js'\nimport React, { Component } from 'react'\nimport { Pie } from 'react-chartjs-2';\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n\nclass ToyStats extends Component {\n    state = {\n        data: {\n            labels: [],\n            datasets: [{\n                data: [],\n                backgroundColor: [\n                    '#FF6384',\n                    '#36A2EB',\n                    '#FFCE56'\n                ],\n                hoverBackgroundColor: [\n                    '#FF6384',\n                    '#36A2EB',\n                    '#FFCE56'\n                ]\n            }]\n        }\n    }\n\n    componentDidMount() {\n        this.props.loadToys(null, true)\n            .then(this.setData)\n    }\n\n    setData = () => {\n        const result = this.props.toys.reduce((acc, toy) => {\n            if (!acc[toy.type]) acc[toy.type] = 0\n            acc[toy.type]++\n            return acc\n        },{})\n        const data = Object.values(result)\n        const labels = Object.keys(result)\n\n        this.setState(prevState => {\n            return {\n                data: {\n                    ...prevState.data,\n                    labels,\n                    datasets: [{\n                        ...prevState.data.datasets[0],\n                        data\n                    }]\n                }\n            }\n        })\n    }\n\n\n    render() {\n        const { data } = this.state\n        return (\n            <div>\n                <h2>Toys Per Category</h2>\n                <Pie data={data} />\n                <Link to=\"/\">Toy list</Link>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        toys: state.toyApp.toys\n    };\n};\n\nconst mapDispatchToProps = {\n    loadToys\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ToyStats);","import React from 'react'\n\nexport default function AppHeader() {\n    return (\n        <header className=\"app-header fs30\">\n            <h1>Welcome to Mister-Toy!</h1>\n        </header>\n\n    )\n}","import React from 'react';\nimport ToyApp from './pages/ToyApp'\nimport ToyEdit from './pages/ToyEdit'\nimport ToyDetails from './pages/ToyDetails'\nimport ToyStats from './pages/ToyStats'\nimport AppHeader from './cmps/AppHeader'\n// import PopUp from './cmps/PopUp'\n\nimport './styles/global.scss';\n\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\n\nclass App extends React.Component {\n    render() {\n        return (\n            <section className=\"toy-app\">\n                <AppHeader />\n                {/* <PopUp/> */}\n                <Switch>\n                    <Route component={ToyStats} path=\"/toy/stats\" />\n                    <Route component={ToyEdit} path=\"/toy/edit/:id?\" />\n                    <Route component={ToyDetails} path=\"/toy/:id\" />\n                    <Route component={ToyApp} exact path=\"/\" />\n                </Switch>\n            </section>\n        )\n    }\n}\n\nexport default connect()(App)\n","const initialState = {\n    toys: [],\n    currToy: null, //for the edit and details pages\n    currFilter: null,\n    isLoading: false\n}\n\nexport default function ToyReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_TOYS':\n            return {\n                ...state,\n                toys: [...action.toys]\n            };\n        case 'SET_TOY':\n            return {\n                ...state,\n                currToy: { ...action.toy }\n            };\n        case 'REMOVE_TOY':\n            return {\n                ...state,\n                toys: state.toys.filter(toy => toy._id !== action.toyId)\n            };\n        case 'ADD_TOY':\n            return {\n                ...state,\n                toys: [...state.toys, action.toy]\n            }\n        case 'UPDATE_TOY':\n            return {\n                ...state,\n                toys: state.toys.map(toy => {\n                    if (toy._id === action.toy._id) return action.toy;\n                    return toy;\n                })\n            }\n        case 'UPDATE_TOY_FILTER':\n            return {\n                ...state,\n                currFilter: { ...action.filter }\n            }\n        case 'TOGGLE_LOAD':\n            return {\n                ...state,\n                isLoading: action.loadingStatus\n            }\n        default:\n            return state;\n    }\n}\n","\nimport {\n    createStore,\n    combineReducers,\n    applyMiddleware,\n    compose\n} from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\nimport toyReducer from './reducers/toyReducer.js'\n\n\nconst rootReducer = combineReducers({\n    toyApp: toyReducer\n});\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n)\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './store/store.js';\nimport * as serviceWorker from './serviceWorker';\nimport {Router} from \"react-router-dom\";\nimport { createBrowserHistory } from 'history';\nimport {Provider} from \"react-redux\";\n\nconst history = createBrowserHistory(); \n\nReactDOM.render(\n  <React.StrictMode> \n    <Provider store={store}>\n      <Router history={history}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}